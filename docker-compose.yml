version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: secure_api_db
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: secure_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - secure_network
    restart: unless-stopped

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - secure_network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password

  # Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://api_user:secure_password@postgres:5432/secure_api_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-this-in-production-min-32-chars
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    depends_on:
      - postgres
      - redis
    networks:
      - secure_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - secure_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  secure_network:
    driver: bridge
